paths:
  create:
    post:
      tags:
        - User
      summary: Create User
      x-router-controller: users_handler
      operationId: createUser_handler
      requestBody:
        description: Created User object
        content:
          application/json:
            schema:
              $ref: '#/schemas/Create'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
  login:
    post:
      tags:
        - User
      summary: Logs User into the system
      x-router-controller: users
      operationId: login_handler
      requestBody:
        description: Created User object
        content:
          application/json:
            schema:
              $ref: '#/schemas/Login'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/schemas/LoginResponse'
        '400':
          description: Invalid Username/password supplied
  loginByToken:
    post:
      tags:
        - User
      summary: Logs User into the system
      x-router-controller: users
      operationId: loginByToken_handler
      requestBody:
        description: Created User object
        content:
          application/json:
            schema:
              $ref: '#/schemas/LoginByToken'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/schemas/LoginResponse'
        '400':
          description: Invalid Username/password supplied
  logout:
    post:
      tags:
        - User
      summary: Logout user
      x-router-controller: users
      operationId: logout_handler
      requestBody:
        description: Access Token
        content:
          application/json:
            schema:
              $ref: '#/schemas/TokenBody'
      responses:
        '202':
          description: OK
  changePassword:
    post:
      tags:
        - User
      summary: Change Password
      x-router-controller: users
      operationId: passwordChange_handler
      requestBody:
        description: Changes user's password.
        content:
          application/json:
            schema:
              $ref: '#/schemas/PasswordChange'
      responses:
        '200':
          description: OK
  recoverPassword:
    post:
      tags:
        - User
      summary: Password recovery
      x-router-controller: users
      operationId: passwordRecovery_handler
      requestBody:
        description: Generates a token for users to change their password.
        content:
          application/json:
            schema:
              $ref: '#/schemas/PasswordRecovery'
      responses:
        '202':
          description: Accepted
  inputToken:
    post:
      tags:
        - User
      summary: Password recovery change
      x-router-controller: users
      operationId: passwordInputToken_handler
      requestBody:
        description: Generates a token for users to change their password.
        content:
          application/json:
            schema:
              $ref: '#/schemas/TokenReply'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
                example: true
  setName:
    post:
      tags:
        - User
      summary: Set user's name
      x-router-controller: users
      operationId: setName_handler
      requestBody:
        description: Set user's name
        content:
          application/json:
            schema:
              $ref: '#/schemas/SetName'
      responses:
        '200':
          description: OK
  getName:
    post:
      tags:
        - User
      summary: Get user's name
      x-router-controller: users
      operationId: getName_handler
      requestBody:
        description: Access Token
        content:
          application/json:
            schema:
              $ref: '#/schemas/TokenBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/schemas/GetName'
  setGoal:
    post:
      tags:
        - User
      summary: Set user's goal
      x-router-controller: users
      operationId: setGoal_handler
      requestBody:
        description: Set user's goal
        content:
          application/json:
            schema:
              $ref: '#/schemas/SetGoal'
      responses:
        '200':
          description: OK
  getGoal:
    post:
      tags:
        - User
      summary: Get user's goal
      x-router-controller: users
      operationId: getGoal_handler
      requestBody:
        description: Access Token
        content:
          application/json:
            schema:
              $ref: '#/schemas/TokenBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/schemas/GetGoal'
  setWeight:
    post:
      tags:
        - User
      summary: Set user's weight
      x-router-controller: users
      operationId: setWeight_handler
      requestBody:
        description: Set user's weight
        content:
          application/json:
            schema:
              $ref: '#/schemas/SetWeight'
      responses:
        '200':
          description: OK
  getWeight:
    post:
      tags:
        - User
      summary: Get user's weight
      x-router-controller: users
      operationId: getWeight_handler
      requestBody:
        description: Access Token
        content:
          application/json:
            schema:
              $ref: '#/schemas/TokenBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/schemas/GetWeight'
  setHeight:
    post:
      tags:
        - User
      summary: Set user's height
      x-router-controller: users
      operationId: setHeight_handler
      requestBody:
        description: Set user's height
        content:
          application/json:
            schema:
              $ref: '#/schemas/SetHeight'
      responses:
        '200':
          description: OK
  getHeight:
    post:
      tags:
        - User
      summary: Get user's height
      x-router-controller: users
      operationId: getHeight_handler
      requestBody:
        description: Access Token
        content:
          application/json:
            schema:
              $ref: '#/schemas/TokenBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/schemas/GetHeight'

schemas:

  Create:
    type: object
    properties:
      username: {$ref: '#/properties/username'}
      email: {$ref: '#/properties/email'}
      password: {$ref: '#/properties/password'}

  Login:
    type: object
    properties:
      username: {$ref: '#/properties/username'}
      password: {$ref: '#/properties/password'}

  LoginByToken:
    type: object
    properties:
      accessToken: {$ref: '#/properties/token'}
  
  LoginResponse:
    type: object
    properties:
      username: {$ref: '#/properties/username'}
      email: {$ref: '#/properties/email'}
      accessToken: {$ref: '#/properties/token'}
      name: {$ref: '#/properties/name'}
      goal: {$ref: '#/properties/goal'}
      weight: {$ref: '#/properties/weight'}
      height: {$ref: '#/properties/height'}
  
  PasswordRecovery:
    type: object
    properties:
      email: {$ref: '#/properties/email'}
  
  PasswordChange:
    type: object
    properties:
      username: {$ref: '#/properties/username'}
      currentPassword: {$ref: '#/properties/password'}
      newPassword: {$ref: '#/properties/password'}
  
  TokenReply:
    type: object
    properties:
      validationToken: {$ref: '#/properties/token'}
      password: {$ref: '#/properties/password'}
  
  TokenBody:
    type: object
    properties:
      accessToken: {$ref: '#/properties/token'}

  SetName:
    type: object
    properties:
      accessToken: {$ref: '#/properties/token'}
      name: {$ref: '#/properties/name'}

  GetName:
    type: object
    properties:
      name: {$ref: '#/properties/name'}
  
  SetGoal:
    type: object
    properties:
      accessToken: {$ref: '#/properties/token'}
      goal: {$ref: '#/properties/goal'}
    
  GetGoal:
    type: object
    properties:
      goal: {$ref: '#/properties/goal'}
  
  SetWeight:
    type: object
    properties:
      accessToken: {$ref: '#/properties/token'}
      weight: {$ref: '#/properties/weight'}
  
  GetWeight:
    type: object
    properties:
      weight: {$ref: '#/properties/weight'}
  
  SetHeight:
    type: object
    properties:
      accessToken: {$ref: '#/properties/token'}
      height: {$ref: '#/properties/height'}
  
  GetHeight:
    type: object
    properties:
      height: {$ref: '#/properties/height'}

properties:

  username:
    type: string
    example: MateusBittencourt

  email:
    type: string
    format: email
    example: mateus.bittencourt@outlook.com

  password:
    type: string
    example: password

  token:
    type: string
    example: 00000000-0000-0000-0000-000000000000

  name:
    type: string
    example: Mateus

  goal:
    type: integer
    format: int32
    example: 1500
  
  weight:
    type: number
    format: float
    example: 68.7
  
  height:
    type: number
    format: float
    example: 166.7
